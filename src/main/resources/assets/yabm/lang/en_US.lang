commands.yabm.general.usage=/yabm <set|get|startbackup> [key] [value]
commands.yabm.get.get_success=Value for %s: %s
commands.yabm.get.get_invalid_key=%s: no such key
commands.yabm.set.set_success=Set %s to %s
commands.yabm.set.set_invalid_value=Invalid value type for %s
commands.yabm.startbackup.start=%s manually started a backup...

yabm.backup.error.create_dir_failed=Error creating backup directory - Aborting
yabm.backup.error.create_backup_failed=Error creating backup: %s
yabm.backup.error.consolidation_failed=Error during consolidation: %s
yabm.backup.error.persistent_failed=Error creating persistent backup: %s
yabm.backup.general.backup_start=Starting backup, prepare for possible lag...
yabm.backup.general.autosave_off=Turning auto-save off...
yabm.backup.general.autosave_on=Turning auto-save back on...
yabm.backup.general.worlds_saved=Worlds saved.
yabm.backup.general.backup_finished=Backup finished.
yabm.backup.general.consolidate_backups=Maximum backup count exceeded; deleting %d old backups...
yabm.backup.general.persistent_start=Starting persistent backup...